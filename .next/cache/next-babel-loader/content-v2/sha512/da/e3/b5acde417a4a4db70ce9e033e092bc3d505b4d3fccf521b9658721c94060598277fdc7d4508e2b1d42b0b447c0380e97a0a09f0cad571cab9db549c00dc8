{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n// function App() {\n//   const size: Size = useWindowSize();\n//   return (\n//     <div>\n//       {size.width}px / {size.height}px\n//     </div>\n//   );\n// }\nexport default function useWindowSize() {\n  _s();\n\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  var _useState = useState({\n    width: undefined,\n    height: undefined\n  }),\n      windowSize = _useState[0],\n      setWindowSize = _useState[1];\n\n  useEffect(function () {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    } // Add event listener\n\n\n    window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return function () {\n      return window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n_s(useWindowSize, \"WMqaMVAPr0u8CJVTsAIdEuYrbbM=\");","map":{"version":3,"sources":["/Users/michaelungar/Documents/octagon-landing/hooks/useWindowSize.ts"],"names":["useState","useEffect","useWindowSize","width","undefined","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,eAAe,SAASC,aAAT,GAA+B;AAAA;;AAC5C;AACA;AAF4C,kBAGRF,QAAQ,CAAO;AACjDG,IAAAA,KAAK,EAAEC,SAD0C;AAEjDC,IAAAA,MAAM,EAAED;AAFyC,GAAP,CAHA;AAAA,MAGrCE,UAHqC;AAAA,MAGzBC,aAHyB;;AAO5CN,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,aAASO,YAAT,GAAwB;AACtB;AACAD,MAAAA,aAAa,CAAC;AACZJ,QAAAA,KAAK,EAAEM,MAAM,CAACC,UADF;AAEZL,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAFH,OAAD,CAAb;AAID,KARa,CASd;;;AACAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAVc,CAWd;;AACAA,IAAAA,YAAY,GAZE,CAad;;AACA,WAAO;AAAA,aAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAN;AAAA,KAAP;AACD,GAfQ,EAeN,EAfM,CAAT,CAP4C,CAsBpC;;AACR,SAAOF,UAAP;AACD;;GAxBuBJ,a","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport interface Size {\n  width: number | undefined;\n  height: number | undefined;\n}\n\n// function App() {\n//   const size: Size = useWindowSize();\n//   return (\n//     <div>\n//       {size.width}px / {size.height}px\n//     </div>\n//   );\n// }\n\n\nexport default function useWindowSize(): Size {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<Size>({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}"]},"metadata":{},"sourceType":"module"}