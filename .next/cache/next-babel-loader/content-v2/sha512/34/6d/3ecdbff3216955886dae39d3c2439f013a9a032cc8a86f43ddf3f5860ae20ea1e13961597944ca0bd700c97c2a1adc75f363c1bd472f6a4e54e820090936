{"ast":null,"code":"import { useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nconst useObserver = ({\n  callback,\n  element\n}) => {\n  const current = element && element.current;\n  const observer = useRef(null);\n  useEffect(() => {\n    if (observer && observer.current && current) {\n      observer.current.unobserve(current);\n    }\n\n    const resizeObserverOrPolyfill = ResizeObserver;\n    observer.current = new resizeObserverOrPolyfill(callback);\n    observe();\n    return () => {\n      if (observer && observer.current && element && element.current) {\n        observer.current.unobserve(element.current);\n      }\n    };\n  }, [current]);\n\n  const observe = () => {\n    if (element && element.current && observer.current) {\n      observer.current.observe(element.current);\n    }\n  };\n};\n\nuseObserver.propTypes = {\n  element: PropTypes.object,\n  callback: PropTypes.func\n};\nexport default useObserver;","map":null,"metadata":{},"sourceType":"module"}