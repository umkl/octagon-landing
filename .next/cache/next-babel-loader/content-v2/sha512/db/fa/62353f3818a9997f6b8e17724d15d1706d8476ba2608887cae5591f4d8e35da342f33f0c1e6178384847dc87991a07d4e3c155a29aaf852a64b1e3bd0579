{"ast":null,"code":"import { useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nconst useObserver = ({\n  callback,\n  element\n}) => {\n  const current = element && element.current;\n  const observer = useRef(null);\n  useEffect(() => {\n    if (observer && observer.current && current) {\n      observer.current.unobserve(current);\n    }\n\n    const resizeObserverOrPolyfill = ResizeObserver;\n    observer.current = new resizeObserverOrPolyfill(callback);\n    observe();\n    return () => {\n      if (observer && observer.current && element && element.current) {\n        observer.current.unobserve(element.current);\n      }\n    };\n  }, [current]);\n\n  const observe = () => {\n    if (element && element.current && observer.current) {\n      observer.current.observe(element.current);\n    }\n  };\n};\n\nuseObserver.propTypes = {\n  element: PropTypes.object,\n  callback: PropTypes.func\n};\nexport default useObserver;","map":{"version":3,"sources":["/Users/michaelungar/Documents/octagon-landing/hooks/useObserver.ts"],"names":["useEffect","useRef","PropTypes","ResizeObserver","useObserver","callback","element","current","observer","unobserve","resizeObserverOrPolyfill","observe","propTypes","object","func"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAC7C,QAAMC,OAAO,GAAGD,OAAO,IAAIA,OAAO,CAACC,OAAnC;AAEA,QAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,QAAQ,IAAIA,QAAQ,CAACD,OAArB,IAAgCA,OAApC,EAA6C;AAC3CC,MAAAA,QAAQ,CAACD,OAAT,CAAiBE,SAAjB,CAA2BF,OAA3B;AACD;;AACD,UAAMG,wBAAwB,GAAGP,cAAjC;AACAK,IAAAA,QAAQ,CAACD,OAAT,GAAmB,IAAIG,wBAAJ,CAA6BL,QAA7B,CAAnB;AACAM,IAAAA,OAAO;AAEP,WAAO,MAAM;AACX,UAAIH,QAAQ,IAAIA,QAAQ,CAACD,OAArB,IAAgCD,OAAhC,IAA2CA,OAAO,CAACC,OAAvD,EAAgE;AAC9DC,QAAAA,QAAQ,CAACD,OAAT,CAAiBE,SAAjB,CAA2BH,OAAO,CAACC,OAAnC;AACD;AACF,KAJD;AAKD,GAbQ,EAaN,CAACA,OAAD,CAbM,CAAT;;AAeA,QAAMI,OAAO,GAAG,MAAM;AACpB,QAAIL,OAAO,IAAIA,OAAO,CAACC,OAAnB,IAA8BC,QAAQ,CAACD,OAA3C,EAAoD;AAClDC,MAAAA,QAAQ,CAACD,OAAT,CAAiBI,OAAjB,CAAyBL,OAAO,CAACC,OAAjC;AACD;AACF,GAJD;AAKD,CAzBD;;AA2BAH,WAAW,CAACQ,SAAZ,GAAwB;AACtBN,EAAAA,OAAO,EAAEJ,SAAS,CAACW,MADG;AAEtBR,EAAAA,QAAQ,EAAEH,SAAS,CAACY;AAFE,CAAxB;AAKA,eAAeV,WAAf","sourcesContent":["import { useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nconst useObserver = ({ callback, element }) => {\n  const current = element && element.current;\n\n  const observer = useRef(null);\n\n  useEffect(() => {\n    if (observer && observer.current && current) {\n      observer.current.unobserve(current);\n    }\n    const resizeObserverOrPolyfill = ResizeObserver;\n    observer.current = new resizeObserverOrPolyfill(callback);\n    observe();\n\n    return () => {\n      if (observer && observer.current && element && element.current) {\n        observer.current.unobserve(element.current);\n      }\n    };\n  }, [current]);\n\n  const observe = () => {\n    if (element && element.current && observer.current) {\n      observer.current.observe(element.current);\n    }\n  };\n};\n\nuseObserver.propTypes = {\n  element: PropTypes.object,\n  callback: PropTypes.func,\n};\n\nexport default useObserver;\n"]},"metadata":{},"sourceType":"module"}