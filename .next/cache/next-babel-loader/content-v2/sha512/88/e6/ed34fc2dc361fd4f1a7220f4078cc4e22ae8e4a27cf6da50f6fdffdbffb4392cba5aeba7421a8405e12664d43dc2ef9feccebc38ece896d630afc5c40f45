{"ast":null,"code":"import { useState, useEffect } from \"react\";\nexport default function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const {\n    0: windowSize,\n    1: setWindowSize\n  } = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    } // Add event listener\n\n\n    window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}","map":{"version":3,"sources":["/Users/michaelungar/Documents/octagon-landing/hooks/useWindowSize.ts"],"names":["useState","useEffect","useWindowSize","windowSize","setWindowSize","width","undefined","height","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAOA,eAAe,SAASC,aAAT,GAA+B;AAC5C;AACA;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BJ,QAAQ,CAAO;AACjDK,IAAAA,KAAK,EAAEC,SAD0C;AAEjDC,IAAAA,MAAM,EAAED;AAFyC,GAAP,CAA5C;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,aAASO,YAAT,GAAwB;AACtB;AACAJ,MAAAA,aAAa,CAAC;AACZC,QAAAA,KAAK,EAAEI,MAAM,CAACC,UADF;AAEZH,QAAAA,MAAM,EAAEE,MAAM,CAACE;AAFH,OAAD,CAAb;AAID,KARa,CASd;;;AACAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAVc,CAWd;;AACAA,IAAAA,YAAY,GAZE,CAad;;AACA,WAAO,MAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAb;AACD,GAfQ,EAeN,EAfM,CAAT,CAP4C,CAsBpC;;AACR,SAAOL,UAAP;AACD","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport interface Size {\n  width: number | undefined;\n  height: number | undefined;\n}\n\nexport default function useWindowSize(): Size {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<Size>({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}"]},"metadata":{},"sourceType":"module"}